{"openapi":"3.0.2","info":{"title":"labs-api","description":"\nThis project provides a reference Python API built using FastAPI, the \naim of the project is:\n\n- To maintain a good know source of habits\n- Demonstrate how applications are meant to be put together at Anomaly\n- Democratize design of robust API\n\n","termsOfService":"https://github.com/anomaly/labs","contact":{"name":"Anomaly Software","url":"https://github.com/anomaly/labs","email":"oss@anomaly.ltd"},"license":{"name":"Apache 2.0","url":"https://www.apache.org/licenses/LICENSE-2.0"},"version":"0.1.0"},"servers":[{"url":"/api"}],"paths":{"/auth/signup":{"post":{"tags":["auth"],"summary":"Signup User","operationId":"signup_user","requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/SignupRequest"}}},"required":true},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/auth/verify":{"get":{"tags":["auth"],"summary":"Verify User","description":"Verify an account","operationId":"verify_user","responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}}}}},"/auth/otp/initiate/email":{"post":{"tags":["auth","otp"],"summary":"Initiate Otp Email","description":"Attempt to authenticate a user and issue JWT token\n\nThe user has provided us their email address and we will\nattempt to authenticate them via OTP.","operationId":"initiate_otp_email","requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/OTPTriggerEmailRequest"}}},"required":true},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{"$ref":"#/components/schemas/OTPTriggerResponse"}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/auth/otp/initiate/sms":{"post":{"tags":["auth","otp"],"summary":"Initiate Otp Sms","description":"Attempt to authenticate a user and issue JWT token\n\nThe user has provided a mobile number and we will text them\ntheir OTP and let them login.","operationId":"initiate_otp_sms","requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/OTPTriggerSMSRequest"}}},"required":true},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{"$ref":"#/components/schemas/OTPTriggerResponse"}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/auth/otp/verify":{"post":{"tags":["auth","otp"],"summary":"Verify Otp","description":"Attempt to authenticate a user and issue JWT token","operationId":"verify_otp","requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/OTPVerifyRequest"}}},"required":true},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/auth/login":{"post":{"tags":["auth"],"summary":" Provides an endpoint for login via email and password\n  ","description":"Attempt to authenticate a user and issue JWT token","operationId":"login_user","requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/PasswordLoginRequest"}}},"required":true},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{"$ref":"#/components/schemas/AuthResponse"}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/auth/refresh":{"post":{"tags":["auth"],"summary":" Provides an endpoint for refreshing the JWT token","description":"Provides a refresh token for the JWT session.","operationId":"refresh_jwt_token","responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{"$ref":"#/components/schemas/AuthResponse"}}}}}}},"/auth/logout":{"post":{"tags":["auth"],"summary":" Provides an endpoint for logging out the user","description":"Ends a users session","operationId":"logout_user","responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}}}}},"/auth/me":{"get":{"tags":["auth"],"summary":"Get Me","description":"Get the currently logged in user or myself\n\nThis endpoint will return the currently logged in user or raise\nand exception if the user is not logged in.","operationId":"get_me","responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{"$ref":"#/components/schemas/UserRequest"}}}}}}},"/ext/echo":{"get":{"tags":["ext"],"summary":"Echo","description":"Echo back a response to say hello.\n\nPurpose of this endpoint is to echo back what was received, this merely\nvalidated that the server is up and running.","operationId":"echo","responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}}}}},"/ext/healthcheck":{"get":{"tags":["ext"],"summary":"Get Health","description":"Check the health of the server.\n\nPurpose of this endpoint is to check the health of the server.\nWe check for connection to the database, queue and logger","operationId":"get_health","responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}}}}},"/ext/log":{"get":{"tags":["ext"],"summary":"Test Logger","description":"Log a message.\n\nPurpose of this endpoint is to log a message to the logger.","operationId":"test_logger","responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}}}}},"/users":{"get":{"tags":["user"],"summary":"Query users between limits","operationId":"get_users_with_limits","parameters":[{"required":false,"schema":{"title":"Offset","minimum":1.0,"type":"integer","default":1},"name":"offset","in":"query"},{"required":false,"schema":{"title":"Limit","maximum":100.0,"minimum":1.0,"type":"integer","default":100},"name":"limit","in":"query"}],"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{"title":"Response Get Users With Limits Users Get","type":"array","items":{"$ref":"#/components/schemas/UserResponse"}}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}},"post":{"tags":["user"],"summary":"Create a new user","operationId":"create_user","responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}}}}},"/users/infinite":{"get":{"tags":["user"],"summary":"Get all users","operationId":"get_users","parameters":[{"required":false,"schema":{"title":"Next Id","type":"string","format":"uuid"},"name":"next_id","in":"query"},{"required":false,"schema":{"title":"Limit","type":"integer","default":10},"name":"limit","in":"query"}],"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/users/{id}":{"get":{"tags":["user"],"summary":"Get a particular user","operationId":"get_user_by_id","parameters":[{"required":true,"schema":{"title":"Id","type":"string","format":"uuid"},"name":"id","in":"path"}],"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}},"delete":{"tags":["user"],"summary":"Delete a particular user","operationId":"delete_user","parameters":[{"required":true,"schema":{"title":"Id","type":"string","format":"uuid"},"name":"id","in":"path"}],"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}},"patch":{"tags":["user"],"summary":"Update a particular user","operationId":"update_user","parameters":[{"required":true,"schema":{"title":"Id","type":"string","format":"uuid"},"name":"id","in":"path"}],"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/":{"get":{"summary":"Root","description":"Placeholder for the root endpoint","operationId":"root","responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}}}}}},"components":{"schemas":{"AuthResponse":{"title":"AuthResponse","required":["accessToken","refreshToken","tokenType","expiresIn"],"type":"object","properties":{"accessToken":{"title":"Accesstoken","type":"string"},"refreshToken":{"title":"Refreshtoken","type":"string"},"tokenType":{"title":"Tokentype","type":"string"},"expiresIn":{"title":"Expiresin","type":"integer"}},"description":"Response from the authentication endpoint\n    "},"HTTPValidationError":{"title":"HTTPValidationError","type":"object","properties":{"detail":{"title":"Detail","type":"array","items":{"$ref":"#/components/schemas/ValidationError"}}}},"OTPTriggerEmailRequest":{"title":"OTPTriggerEmailRequest","required":["email"],"type":"object","properties":{"email":{"title":"Email","type":"string"}},"description":"Pydantic base model for applications\n\nThis class is used to define the base model for all schema\nthat we use in the Application, it configures pydantic to\ntranslate between camcelCase and snake_case for the JSON\namongst other default settings.\n\nORM mode will allow pydantic to translate SQLAlchemy results\ninto serializable models.\n\nFor a full set of options, see:\nhttps://pydantic-docs.helpmanual.io/usage/model_config/"},"OTPTriggerResponse":{"title":"OTPTriggerResponse","required":["success"],"type":"object","properties":{"success":{"title":"Success","type":"boolean"}},"description":"OTP Verification result "},"OTPTriggerSMSRequest":{"title":"OTPTriggerSMSRequest","required":["mobileNumber"],"type":"object","properties":{"mobileNumber":{"title":"Mobilenumber","type":"string"}},"description":"Pydantic base model for applications\n\nThis class is used to define the base model for all schema\nthat we use in the Application, it configures pydantic to\ntranslate between camcelCase and snake_case for the JSON\namongst other default settings.\n\nORM mode will allow pydantic to translate SQLAlchemy results\ninto serializable models.\n\nFor a full set of options, see:\nhttps://pydantic-docs.helpmanual.io/usage/model_config/"},"OTPVerifyRequest":{"title":"OTPVerifyRequest","required":["otp"],"type":"object","properties":{"otp":{"title":"Otp","type":"string"}},"description":"OTP sent to the server to verify if it's valid "},"PasswordLoginRequest":{"title":"PasswordLoginRequest","required":["username","password"],"type":"object","properties":{"username":{"title":"Username","type":"string"},"password":{"title":"Password","type":"string"}},"description":"Requires parameters to login via password\n    "},"SignupRequest":{"title":"SignupRequest","required":["password","email"],"type":"object","properties":{"password":{"title":"Password","type":"string"},"email":{"title":"Email","type":"string"}},"description":"Pydantic base model for applications\n\nThis class is used to define the base model for all schema\nthat we use in the Application, it configures pydantic to\ntranslate between camcelCase and snake_case for the JSON\namongst other default settings.\n\nORM mode will allow pydantic to translate SQLAlchemy results\ninto serializable models.\n\nFor a full set of options, see:\nhttps://pydantic-docs.helpmanual.io/usage/model_config/"},"UserRequest":{"title":"UserRequest","required":["verified"],"type":"object","properties":{"email":{"title":"Email","type":"string"},"mobileNumber":{"title":"Mobilenumber","type":"string"},"verified":{"title":"Verified","type":"boolean"},"firstName":{"title":"Firstname","type":"string"},"lastName":{"title":"Lastname","type":"string"}},"description":"User profile \n    "},"UserResponse":{"title":"UserResponse","required":["createdAt","updatedAt","id","email","verified"],"type":"object","properties":{"createdAt":{"title":"Createdat","type":"string","format":"date-time"},"updatedAt":{"title":"Updatedat","type":"string","format":"date-time"},"id":{"title":"Id","type":"string","format":"uuid"},"email":{"title":"Email","type":"string"},"mobileNumber":{"title":"Mobilenumber","type":"string"},"verified":{"title":"Verified","type":"boolean"},"firstName":{"title":"Firstname","type":"string"},"lastName":{"title":"Lastname","type":"string"}},"description":"User profile \n    "},"ValidationError":{"title":"ValidationError","required":["loc","msg","type"],"type":"object","properties":{"loc":{"title":"Location","type":"array","items":{"anyOf":[{"type":"string"},{"type":"integer"}]}},"msg":{"title":"Message","type":"string"},"type":{"title":"Error Type","type":"string"}}}}},"tags":[{"name":"auth","description":"Authentication related endpoints"}]}