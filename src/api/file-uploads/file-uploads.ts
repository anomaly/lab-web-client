/**
 * Generated by orval v6.14.3 üç∫
 * Do not edit manually.
 * labs-api
 * 
This project provides a reference Python API built using FastAPI, the 
aim of the project is:

- To maintain a good know source of habits
- Demonstrate how applications are meant to be put together at Anomaly
- Democratize design of robust API


 * OpenAPI spec version: 0.1.0
 */
import axios from 'axios'
import type {
  AxiosRequestConfig,
  AxiosResponse,
  AxiosError
} from 'axios'
import {
  useMutation
} from 'react-query'
import type {
  UseMutationOptions,
  MutationFunction
} from 'react-query'
import type {
  FileUploadResponse,
  HTTPValidationError,
  FileUploadRequest
} from '.././models'


/**
 * @summary Get Upload Url
 */
export const getUploadUrl = (
    fileUploadRequest: FileUploadRequest, options?: AxiosRequestConfig
 ): Promise<AxiosResponse<FileUploadResponse>> => {
    return axios.post(
      `/upload`,
      fileUploadRequest,options
    );
  }



export const getGetUploadUrlMutationOptions = <TError = AxiosError<HTTPValidationError>,
    
    TContext = unknown>(options?: { mutation?:UseMutationOptions<Awaited<ReturnType<typeof getUploadUrl>>, TError,{data: FileUploadRequest}, TContext>, axios?: AxiosRequestConfig}
): UseMutationOptions<Awaited<ReturnType<typeof getUploadUrl>>, TError,{data: FileUploadRequest}, TContext> => {
 const {mutation: mutationOptions, axios: axiosOptions} = options ?? {};

      


      const mutationFn: MutationFunction<Awaited<ReturnType<typeof getUploadUrl>>, {data: FileUploadRequest}> = (props) => {
          const {data} = props ?? {};

          return  getUploadUrl(data,axiosOptions)
        }

        

 
   return  { mutationFn, ...mutationOptions }}

    export type GetUploadUrlMutationResult = NonNullable<Awaited<ReturnType<typeof getUploadUrl>>>
    export type GetUploadUrlMutationBody = FileUploadRequest
    export type GetUploadUrlMutationError = AxiosError<HTTPValidationError>

    export const useGetUploadUrl = <TError = AxiosError<HTTPValidationError>,
    
    TContext = unknown>(options?: { mutation?:UseMutationOptions<Awaited<ReturnType<typeof getUploadUrl>>, TError,{data: FileUploadRequest}, TContext>, axios?: AxiosRequestConfig}
) => {
    
      const mutationOptions = getGetUploadUrlMutationOptions(options);
     
      return useMutation(mutationOptions);
    }
    